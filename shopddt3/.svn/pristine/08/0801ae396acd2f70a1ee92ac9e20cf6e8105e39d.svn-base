<?php

namespace Home\Controller;

use BizService\ShareService;
use Think\Controller;
use BizService\UserService;

header("Content-type:text/html;charset=utf-8");

class IndexController extends Controller
{
    public function _initialize(){
        $shop_info = shop_info(session('city'));
        $this->assign("shop_base_info",$shop_info);
        $sess_userid = session('userId');
        $type = I('get.type','','strval');
        $open_id = session('wx_openid');
        if($open_id){
            $this->assign("wx_mode",0);//得到openid
        }else{
            $this->assign("wx_mode",1);//未得到openid
        };

        if($sess_userid){
            $this->assign("sess_userid",$sess_userid);
        }else{
            $this->assign("sess_userid",0);
        }

    }
//    public function index2(){
//        //获取微信坐标
//        require_once './ThinkPHP/Library/Vendor/WeixinJssdk/WeixinJssdk2.php';
//        $jssdk=new \WeixinJssdk();
//        $signPackage = $jssdk->GetSignPackage();
//        $this->assign('signPackage', $signPackage);
//        $share_service = new ShareService();
//        $share = $share_service->get_share_set($shop_proxy['shop_id']);
//        $this->assign('share',$share[0]);
//        $this->assign('shop_id',$shop_proxy['shop_id']);
//        $this->display("index");
//    }
    //商城主页
    public function index()
    {   
        //如果有坐标传来就保存到session中
        $lat = I('location_lat') ? I('location_lat') : 0;
        $lng = I('location_lng') ? I('location_lng') : 0;
        if ($lat && $lng) {
            session('lat', $lat);
            session('lng', $lng);
        }
        echo session('lat');

        //获取商城信息
        $shop_proxy = get_shop_proxy();
        $shop_id = $shop_proxy['shop_id'] ? $shop_proxy['shop_id'] : 1;
        //搜索本商城首页信息
        $shouye = D("Admin/temp")->getinfo(array('shop_id' => $shop_id, 'temp_type' => 1));
        $temp_id = $shouye['temp_id'] ? $shouye['temp_id'] : 0;

        //var_dump($_SERVER);
        //获取已添加的样式
        $item_param = array();
        $item_param['temp_id'] = $temp_id;
        $item_param['item_is_used'] = 1;
        $item_param['shop_id'] = $shop_id;
        $item_order = 'item_order asc ,item_id asc';
        $item_data = D("Tempitem")->getlist($item_param, $item_order);
		//获取微信坐标
		require_once './ThinkPHP/Library/Vendor/WeixinJssdk/WeixinJssdk.php';
	    $jssdk=new \WeixinJssdk();
        $signPackage = $jssdk->GetSignPackage();
		$this->assign('signPackage', $signPackage);

        $this->assign('show', 1);
        $this->assign('item_data', $item_data);
        $this->assign('temp_id', $temp_id);
        $this->assign('username', session('userName'));
        $share_service = new ShareService();
        $share = $share_service->get_share_set($shop_proxy['shop_id']);
        $this->assign('share',$share[0]);
        $this->assign('shop_id',$shop_proxy['shop_id']);
		$this->assign('uri', "");
        $this->display("temp_index");
    }

    //用户登录页
    public function userLogin()
    {
        $userName = session('userName');
        if (isset($userName)) {
            redirect('index');
        }
        $encodeUrlstr = I('get.before_url','');
        $before_url = urldecode($encodeUrlstr);
        cookie('before_url',$before_url);
        $this->display('userLogin');
    }

    //用户登录
    public function userActLogin()
    {
        $user = new UserService();
        $userName = I('post.username', '');
        $password = I('post.password', '');
        //过滤条件

        $data = $user->userLogin($userName, $password);
        if ($data){
            // $this->error('登录失败', 'userLogin');
            $info = array("status"=>0,"info"=>'密码错误或未注册');
        }else{
            $before_url = cookie('before_url');
            if($before_url){
                cookie('before_url',null);
                $info = array("status"=>1,"info"=>$before_url);
                // redirect($before_url);
            }else{
                $info = array("status"=>1,"info"=>U('/home/index/index'));
            }
        }
        echo json_encode($info);exit();
            // $this->success('登录成功','index',0);
    }

    //用户登出
    public function userLoginOut()
    {   
        $wx_openid = session('wx_openid');
        $userId = session('userId');
        if(isset($wx_openid)){
            D('Home/Users')->removeWXUser($userId);
        }
        session_destroy();
        session('wx_openid',$wx_openid);
        // session('userName',null);
        // session('userId',null);
        redirect('index');
    }

    //用户注册页
    public function register()
    {
        $userName = session('userName');
        if (isset($userName)) {
            redirect('index');
        }
        $this->display('register');
    }

    //用户输入密码页
    public function inputPassword()
    {
        $userName = session('userName');
        if (isset($userName)) {
            redirect('index');
        }
        $type = I('post.type', '', 'strval');
        $phone_num = I('post.username', '', 'strval');
        $this->assign('username', $phone_num);
        $this->assign('type', $type);
        $this->display('inputPassword');
    }

    //用户注册
    public function actRegister()
    {
        $user = new UserService();
        $userName = I('post.username', '');
        $password = I('post.password', '');
        //过滤条件
        $data = $user->userRegister($userName, $password);
        if ($data){
            $before_url = cookie('before_url');
            if($before_url){
                cookie('before_url',null);
                $info = array("status"=>1,"info"=>$before_url);
                // redirect($before_url);
            }else{
                $info = array("status"=>1,"info"=>U('/home/index/index'));
            }
        }else{
            $info = array("status"=>0,"info"=>'注册失败');
        }
        echo json_encode($info);exit();
    }

    //找回密码页面
    public function findPwd()
    {
        $this->display('findPwd');
    }

    //找回密码
    public function actFindpwd()
    {
        $user = new UserService();
        $userName = I('post.username', '');
        $password = I('post.password', '');
        //过滤条件
        $userId = $user->checkUser($userName);
        $data = $user->resetPasswd($userId, $password);
        if ($data){
            // $before_url = cookie('before_url');
            // if($before_url){
            //     cookie('before_url',null);
            //     $info = array("status"=>1,"info"=>$before_url);
            // }else{
                $info = array("status"=>1,"info"=>U('/home/index/userLogin'));
            // }
            
        }else{
            $info = array("status"=>0,"info"=>'修改密码失败');
        }
        echo json_encode($info);exit();
        // if ($data)
        //     $this->success('修改密码成功', 'index');
        // else
        //     $this->error('修改密码失败', 'register');
    }

    //用户注册发送短信验证
    public function getCode_reg()
    {
        $user = new UserService();
        session('code', I('session.code', ''));
        $phone_num = I('post.username', '', 'strval');
        if (!preg_match('/^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/', $phone_num)) {
            echo json_encode(array("code" => 0, "msg" => "请输入合法手机号码~!"));
            exit();
        } else {
            if( session($phone_num) == 0 || session($phone_num) == 1){
                if(session($phone_num) == 0){
                    $captcha = I('post.captcha', '', 'strval');
                    $result = $this->check_verify($captcha);
                    
                    if (false == $result )
                    {
                       echo json_encode(array("code"=>0,"msg"=>"请输入正确图形验证码~!"));exit;
                    }
                }
            }else{
                echo json_encode(array("code"=>2,"msg"=>"非法访问~!"));exit;
            }



            if ($user->checkUser($phone_num)) {
                echo json_encode(array("code" => 2, "msg" => "该手机号码已注册~!"));
                exit();
            }
            $code = strval(rand(1000, 9999));
            $data = "您好,您的注册验证码是：" . $code . " 欢迎您使用点点通掌上商城,请勿将验证码告知他人!";
            if (!I('session.send_time', '')) {
                if (time() - session('send_time') < 60) {
                    $again_time = 60 - (time() - session('send_time'));
                    echo json_encode(array("code" => 2, "msg" => "请求过于频繁,请等待" . $again_time . "秒"));
                    exit();
                }
            }
            session('code', $code . "_" . $phone_num);
            $co = $user->sendMsgForUser($phone_num, $data);
            session('send_time', time());//重新赋值时间
            if ($co == '0') {
                echo json_encode(array("code" => 1, "msg" => "验证码" . $code . "已发送~!"));
                exit();
            }else{
                echo json_encode(array("code"=>2,"msg"=>"验证码发送失败,稍后请重试"));exit(); 
            }
        }
    }
    /**
    *验证用户是否显示验证码
    *@author bruce
    */
    public function getImgCode(){
        //判断是否显示图形验证码
        $nowIp = $_SERVER["REMOTE_ADDR"];
        $phone_num = I('post.username', '', 'strval');
        $str = $phone_num."\n";
        $sock = socket_create(AF_INET, SOCK_DGRAM, SOL_UDP);
        $msg = sprintf("uip=%s&phone=%s",$nowIp,$str);
        $len = strlen($msg);
        socket_sendto($sock, $msg, $len, 0, '10.171.53.174', 7769);
        //socket_sendto($sock, $msg, $len, 0, '192.168.1.110', 7769);
        $from = "";
        $port = 0;
        socket_recvfrom( $sock, $buf,1024, 0, $from, $port );
        //echo $buf;
        $result = json_decode($buf,true);
        //1 :ok 0:fail
        if($result){
            if($result['ret'] == 1){
                //不显示
                session($phone_num, 1);
                echo json_encode(array("code"=>1));exit();
            }else{
                session($phone_num, 0);
                echo json_encode(array("code"=>0));exit();
            }
        }
    }
    function verify(){
        $Verify = new \Think\Verify();
        $Verify->fontSize = 30;
        $Verify->length   = 4;
        $Verify->useNoise = true;
        $Verify->entry();
    }
    // 检测输入的验证码是否正确，$code为用户输入的验证码字符串
    function check_verify($code='', $id = ''){
        $verify = new \Think\Verify();
        return $verify->check($code, $id);      
    }

    //用户找回密码发送短信验证
    public function getCode_findpwd()
    {
        $user = new UserService();
        session('code', I('session.code', ''));
        $phone_num = I('post.username', '', 'strval');
        if (!preg_match('/^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/', $phone_num)) {
            echo json_encode(array("code" => 0, "msg" => "请输入合法手机号码~!"));
            exit();
        } else {
            if( session($phone_num) == 0 || session($phone_num) == 1){
                if(session($phone_num) == 0){
                    $captcha = I('post.captcha', '', 'strval');
                    $result = $this->check_verify($captcha);
                    
                    if (false == $result )
                    {
                       echo json_encode(array("code"=>0,"msg"=>"请输入正确图形验证码~!"));exit;
                    }
                }
            }else{
                echo json_encode(array("code"=>2,"msg"=>"非法访问~!"));exit;
            }

            if (!$user->checkUser($phone_num)) {
                echo json_encode(array("code" => 2, "msg" => "该手机号码未注册~!"));
                exit();
            }
            $code = strval(rand(1000, 9999));
            $data = "您好,您正在进行修改密码，验证码是：" . $code . " 欢迎您使用点点通掌上商城,请勿将验证码告知他人!";
            if (!I('session.send_time', '')) {
                if (time() - session('send_time') < 60) {
                    $again_time = 60 - (time() - session('send_time'));
                    echo json_encode(array("code" => 2, "msg" => "请求过于频繁,请等待" . $again_time . "秒"));
                    exit();
                }
            }
            session('code', $code . "_" . $phone_num);
            $co = $user->sendMsgForUser($phone_num, $data);
            session('send_time', time());//重新赋值时间
            if ($co == '0') {
                echo json_encode(array("code" => 1, "msg" => "验证码" . $code . "已发送~!"));
                exit();
            }else{
                echo json_encode(array("code"=>2,"msg"=>"验证码发送失败,稍后请重试"));
            }
        }
    }

    //核对验证码
    public function checkCode()
    {
        $user = new UserService();
        $phone_num = I('post.username', '', 'strval');
        $check_code = I('post.check_code', '', 'strval');
        echo $user->checkCode($phone_num, $check_code);
    }

    public function location()
    {
	    //获取微信坐标
		require_once './ThinkPHP/Library/Vendor/WeixinJssdk/WeixinJssdk.php';
	    $jssdk=new \WeixinJssdk();
        $signPackage = $jssdk->GetSignPackage();
		$this->assign('signPackage', $signPackage);
        $this->display('location');
    }
	
    public function get_ip(){
            // echo getenv("HTTP_X_FORWARDED_FOR");exit;
          $ip = getenv("REMOTE_ADDR");
          echo $ip;

    }
	
		//计算运费
	public function ajax_get_shipping_fee(){
	    $parent_id=I("get.parent_id",0,"intval");
		$sendtype=I("get.sendtype",0,"intval");
		$shipping_fee=0;
		$shipping_fee=get_shipping_fee($parent_id,$sendtype);
		echo $shipping_fee;
	}
    public function wx_mine(){
        if (!session('userId')) {
            $this->redirect("Auth/auto_login?wx_mine=1");
        }else{
            $this->redirect("User/mine");
        }
    }
        
    


}