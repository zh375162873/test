<?php
/*
 * 普通商品订单支付和管理模块
 */
namespace Home\Controller;
use Think\Controller;
use BizService\UserService;

class WxpayController extends Controller {
   public $orderdb,$ordergoods,$users;
   public function __construct(){
       parent::__construct();
       $this->orderdb=D("Orders");
       $this->ordergoods = D("OrdersGoods");
       $this->users = new UserService();
     
      // $this->assign("userid", session("userId"));
   }
    
    public function js_api_call(){
         $order_id = I("get.id",0,"intval");
        if(!$order_id){
            $this->redirect("index/index");
        } 
		
		
//计算运费 2015-12-21 张辉  	
	 $sendtype=isset($param['sendtype'])?$param['sendtype']:0;
	 $yunfei=0;
	 if($sendtype>0){
	   $yun= get_shipping_fee($data['order_id'],$sendtype);
	   if($yun>=0){
	     if($sendtype==1){
		 
		 }elseif($sendtype==2){
		   $yun=0-$yun;
		 }
	      $yunfei=$yun;
	   }
	 }
	 //获取用户余额账户情况，计算
		if (!session("userId")) {
		   return false;
		} else {
		   $_userid = session("userId");
		}
		$users = new UserService();
		$userinfo = $users->userInfo($_userid);
	 //循环出所有订单信息
	    $order_id=$data['order_id'];
	    $orderlist=M("orders")->where("parent_id=$order_id")->select();
		$orderall=array();
		//商品总价
		$goods_amount=0;
		//余额支付
		$ye_paymoney=0;
		//在线支付
		$online_paymoney=0;
		//合计支付
		$order_amount=0;
		//商品名称
		$goods_name="";
		$orderdb = D("Orders");
		foreach($orderlist as $key=>$val){
		  //调取订单商品信息
		  $orderinfo1 = $orderdb->getinfo($val['order_id']);
		  $orderall[$key]=$orderinfo1;
		  $goods_amount=$goods_amount+$orderinfo1['goods_amount'];
		  $ye_paymoney=$ye_paymoney+$orderinfo1['ye_paymoney'];
		  $online_paymoney=$online_paymoney+$orderinfo1['online_paymoney'];
		  $order_amount=$order_amount+$orderinfo1['order_amount'];
		  $goods_name=$goods_name.",".$val['goods']['goods_name'];
          //保存快递类型
          $orderdb->where("order_id=".$val['order_id'])->data(array('send_type'=>$sendtype))->save();
			
		}
		$online_paymoney=$online_paymoney+$yunfei;
		
		
		echo $online_paymoney;
		exit;
		
		
		
		
        vendor("WxPayPubHelper.WxPayPubHelper");
       
        $orderinfo = $this->orderdb->getinfo($order_id);
        $userinfo = $this->users->userInfo($orderinfo['buyer_id']);
        $jsapi_call_url = "http://".$_SERVER['HTTP_HOST']."".U("Home/Wxpay/js_api_call",array("id"=>$order_id));
        $notiy_url = "http://".$_SERVER['HTTP_HOST']."/weixin/notify_url.php";
        
        //使用jsapi接口
        $jsApi = new \JsApi_pub();
       // echo $jsapi_call_url."<pre>";print_r($wxconfig);exit();
        //=========步骤1：网页授权获取用户openid============
        //通过code获得openid
    
        if (!isset($_GET['code']))
        {
            //触发微信返回code码
            $url = $jsApi->createOauthUrlForCode($jsapi_call_url);
           
            Header("Location: $url");
        }
        else
        {
            //获取code码，以获取openid
            $code = $_GET['code'];
            $jsApi->setCode($code);
            $openid = $jsApi->getOpenId();
        }
      
        //=========步骤2：使用统一支付接口，获取prepay_id============
        //使用统一支付接口
        $unifiedOrder = new \UnifiedOrder_pub();
         
        //设置统一支付接口参数
        //设置必填参数
        //appid已填,商户无需重复填写
        //mch_id已填,商户无需重复填写
        //noncestr已填,商户无需重复填写
        //spbill_create_ip已填,商户无需重复填写
        //sign已填,商户无需重复填写
        $unifiedOrder->setParameter("openid","$openid");//商品描述
        $unifiedOrder->setParameter("body","购买".$data['goods_name']."在线支付".$data['online_paymoney']);//商品描述
        //自定义订单号，此处仅作举例
        //$timeStamp = time();
        $out_trade_no = $orderinfo['order_sn'];
        $total_fee = $orderinfo['online_paymoney']*100;
        $unifiedOrder->setParameter("out_trade_no","$out_trade_no");//商户订单号
        $unifiedOrder->setParameter("total_fee",$total_fee);//总金额
        $unifiedOrder->setParameter("notify_url",$notiy_url);//通知地址
        $unifiedOrder->setParameter("trade_type","JSAPI");//交易类型
        //非必填参数，商户可根据实际情况选填
        //$unifiedOrder->setParameter("sub_mch_id","XXXX");//子商户号
        //$unifiedOrder->setParameter("device_info","XXXX");//设备号
        //$unifiedOrder->setParameter("attach","XXXX");//附加数据
        //$unifiedOrder->setParameter("time_start","XXXX");//交易起始时间
        //$unifiedOrder->setParameter("time_expire","XXXX");//交易结束时间
        //$unifiedOrder->setParameter("goods_tag","XXXX");//商品标记
        //$unifiedOrder->setParameter("openid","XXXX");//用户标识
        //$unifiedOrder->setParameter("product_id","XXXX");//商品ID
         
        $prepay_id = $unifiedOrder->getPrepayId();
        //=========步骤3：使用jsapi调起支付============
        $jsApi->setPrepayId($prepay_id);
         
        $jsApiParameters = $jsApi->getParameters();
        
        $this->assign("jsApiParameters",$jsApiParameters);
        $this->assign("orderinfo", $orderinfo);
        $this->assign("userinfo", $userinfo);
        $this->display("pay");
        /* echo $jsApiParameters;
        exit();  
        $html_info .= "<script type='text/javascript'>
                		//调用微信JS api 支付
                		function jsApiCall(){
                			WeixinJSBridge.invoke(
                				'getBrandWCPayRequest',
                				 ".$jsApiParameters.",
                				function(res){
                					WeixinJSBridge.log(res.err_msg);
                					//alert(res.err_code+res.err_desc+res.err_msg);});}
                		function callpay(){
                			if (typeof WeixinJSBridge == 'undefined'){
                			    if(document.addEventListener){
                			        document.addEventListener('WeixinJSBridgeReady',jsApiCall, false);
                			    }else if(document.attachEvent){
                			        document.attachEvent('WeixinJSBridgeReady',jsApiCall);
                			        document.attachEvent('onWeixinJSBridgeReady',jsApiCall);
                			    }}else{jsApiCall();}}</script>";
        $html_info .="<form><button class='sub_wx' type='submit' onclick='callpay()'>微信支付</button></form>";
        
        echo $html_info; */
    }
    
    /*
     * 微信支付相应
     */
    public function wx_notiy_do(){
               $trade_no = I("get.trade_no",0);        
               $buyer_email = I("get.buyer_email");
               $out_trade_no = I("get.out_trade_no");
              
                $parameter = array( 
                    "trade_no" => $trade_no,
                    "buyer_email"=>$buyer_email,
                    "out_trade_no"=>$out_trade_no,
                );
              
               if($this->orderdb->notiy_order($parameter,2)){
                   echo "success";
               }else{
                   echo "error";
               }
     
    }
    
}

