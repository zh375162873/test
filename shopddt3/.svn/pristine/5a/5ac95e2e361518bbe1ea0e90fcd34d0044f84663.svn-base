<?php
namespace Home\Controller;

use BizService\FavoriteService;
use Think\Controller;
use BizService\GoodshomeService;
use BizService\ExtendService;

header("Content-type:text/html;charset=utf-8");

class GoodsController extends Controller
{
    public function _initialize(){
        $shop_info = shop_info();
        $this->assign("shop_base_info",$shop_info);
    }
    //产品列表页面默认
    public function index()
    {
        $this->goodslist();
    }

    //产品列表页面
    public function goodslist()
    {
        $type = I("type",0,'intval');
        $gc_id = I("gc_id",0,'intval');
        $lat = I("lat") ? I("lat") : 0;
        $long = I("long") ? I("long") : 0;
        $data = array();
		$data['page'] = 1;
		$data['size'] = 7; 
		//分页
        $data['limit'] = "0,7";
        if ($gc_id) {
            $data['gc_id'] = $gc_id;
            //搜索分类名称作为标题
            $class_info = M('goods_class')->where('gc_id=' . $gc_id)->field('gc_name,gc_description,gc_keywords')->find();
            $this->assign('description', $class_info['gc_description']);
            $this->assign('keywords', $class_info['gc_keywords']);
            $this->assign('title', $class_info['gc_name']);
        }
        if ($type) {
            $data['order'] = $type;
        }
        if ($lat) {
            //gps定位
            $map = new \BizService\MapService();
            $f = $map->locationByGPS($long, $lat);
            $data['lat'] = $f['lat'];
            $data['lng'] = $f['lng'];
        } elseif (session('lat') && session('lng')) {
            $data['lat'] = session('lat');
            $data['lng'] = session('lng');
        } else {
		    $data['lat'] = "34.26567";
            $data['lng'] = "108.953435";
            //百度定位
            /*$mapService = new \BizService\MapService();
            $map = $mapService->locationByIP();
            $data['lat'] = $map['lat'];
            $data['lng'] = $map['lng'];*/
        }

        print_r(shop_info());
        $goodslist = array();
        $GoodshomeService = new GoodshomeService();
        $goodslist = $GoodshomeService->mgoods_list($data, 0);
		
		foreach($goodslist as $key=>$val){
		   $id= $val['goods_commonid']?$val['goods_commonid']:0;
		   $good_info=D('Admin/goods')->where('goods_commonid='.$id)->find();
		   if($good_info){
		   
		   }else{
		     unset($goodslist[$key]);
		   }
		}
        //测试ip定位
       /* $ip = get_client_ip();
        $Ips = new \Org\Net\IpLocation('UTFWry.dat'); // 实例化类 参数表示IP地址库文件
        $area = $Ips->getlocation($ip); // 获取某个IP地址所在的位置*/
        //获取gps信息


        $this->assign('goodslist', $goodslist);
        $this->assign('gc_id', $gc_id);
        $this->assign('type', $type);
        $this->assign('lat', $lat);
        $this->assign('long', $long);
        $this->display('goods_list');
    }

    //产品列表页面(分页)
    public function ajax_goodslist()
    {
        $type = I("type") ? I("type") : 0;
        $gc_id = I("gc_id") ? I("gc_id") : 0;
        $counting = I("counting") ? I("counting") : 1;
        $oncenum = I("oncenum") ? I("oncenum") : 6;
        $lat = I("lat") ? I("lat") : 0;
        $lng = I("lng") ? I("lng") : 0;
		//定位坐标
        if ($lat && $lng) {
            $data['lat'] = $lat;
            $data['lng'] = $lng;
        }elseif (session('lat') && session('lng')) {
            $data['lat'] = session('lat');
            $data['lng'] = session('lng');
        } else {
		    $data['lat'] = "34.26567";
            $data['lng'] = "108.953435"; /*else {
            //百度定位
            $mapService = new \BizService\MapService();
            $map = $mapService->locationByIP();
            $data['lat'] = $map['lat'];
            $data['lng'] = $map['lng'];*/
        }
        if ($gc_id) {
            $data['gc_id'] = $gc_id;
        }
        if ($type) {
            $data['order'] = $type;
        }
		
        $GoodshomeService = new GoodshomeService();

        //调取代理信息
        $shop_info = get_shop_proxy();
        $shop_id = $shop_info['shop_id'] ? $shop_info['shop_id'] : 1;
        //获取传来的信息
        $info = $_POST['info'];
        $page = $counting;
        $size = $oncenum;
        $str = "";
        $p_data = $GoodshomeService->mgoods_list($data, 0);
        $count = count($p_data);
        $max_page = ($count > 0) ? ceil($count / $size) : 1;
        if ($page > $max_page) {
            $array = array();
            echo json_encode($array);
            exit;
        }

        $limit = "";
        if ($page >= 1 && $size > 0) {
            $num = $size;
            $statnum = ($page - 1) * $num;
            $limit = " $statnum,$num ";
        }
		
		//一次性请求全部数据，从第二页算起,
		if(I('loadLength')==1){
		    $num = $size;
            $statnum = $page * $num;
            $limit = " $num, $statnum";
		}
		
		
		
        $data['limit'] = $limit;
		$data['page'] = $page;
		$data['size'] = $size;
        $goodslist = $GoodshomeService->mgoods_list($data, 0);

        if ($max_page < $page) {
            $array = array();
            echo json_encode($array);
        } else {
            echo json_encode($goodslist);
        }

    }

    //产品详情页面
    public function goodsview()
    {
        $goods_id = I('id',0,'intval');
        $goods_commonid = I('goods_commonid',0,'intval') ;
        //获取产品详情信息
        $goods = array();
        if ($goods_id) {
            $goods = D('goods')->getinfobyid($goods_id);
        } elseif ($goods_commonid) {
            $goods = D('goods')->getinfobycommonid($goods_commonid);
        } else {
            $this->error('参数有误！', 'index');
        }
        if ($goods) {
            //调取商品轮播图
            $goods_lunbo = D('Admin/goodsimages')->info($goods['goods_commonid']);
            $goods['lunbo'] = $goods_lunbo;
            //获取公共信息
            $goods_common = D('Admin/goodscommon')->where("goods_commonid=" . $goods['goods_commonid'])->find();
            $goods['subtitle'] = $goods_common['subtitle'];
            $goods['position_tags'] = $goods_common['position_tags'];
            $goods['usetime'] = string2array($goods_common['usetime']);
            $goods['start_date'] = $goods_common['start_date'];
            $goods['end_date'] = $goods_common['end_date'];
            $goods['rules'] = string2array($goods_common['rules']);
            $goods['mobile_body'] = htmlspecialchars_decode($goods_common['mobile_body']);
		    $goods['title']=$goods_common['seo_title']?$goods_common['seo_title']:$goods_common['goods_name'];
            $goods['keywords'] = $goods_common['keywords'];
            $goods['description'] = $goods_common['description'];
			$goods['addcontent'] = string2array($goods_common['addconent']);
            //获取商家信息
            $store = get_merchant_info($goods_common['store_id']);
            $goods['store'] = $store;
			//判断是否为虚假库存
			if($goods['storage_type']){
			  //判断是否小于等于最小调拨值，如果小于就重新调配库存
			  if($goods['storage_num']<=$goods['storage_type_num']){
			    //调取现有的库存是否够最大库存的数量,就将显示的库存显示为最大库存值，如果不是，就显示现有库存
				if($goods['goods_storage']>=$goods['storage_type_max']){
			      $goods['storage_num']=$goods['storage_type_max'];
				}else{
				  $goods['storage_num']=$goods['goods_storage'];
				}
				M('goods')->where('goods_id='.$goods['goods_id'])->data('storage_num='.$goods['storage_num'])->save();
			  }
			  $goods['goods_storage']=$goods['storage_num'];
			}
        } else {
            $this->error('无此商品信息', 'index');
        }
        //检查此商品是否是特惠推广商品
        $ExtendService = new ExtendService();
        $channel = $ExtendService->checkExtendGoods($goods_id);
        if (I('goods_code','','strip_tags')) {
            $goods_code = I('goods_code','','strip_tags');
            $goods_id =I('id','','intval');
            $channel_info = $ExtendService->getExtendGoods($goods_id, $goods_code);
            if ($channel_info) {
                if ($channel_info['end_time'] > time()) {
                    session('goods_code', $goods_code);
                    session('goods_id', $goods_id);
                    $this->assign('goods_code', $goods_code);
                    $this->assign('channel_price', $goods['goods_price'] * $channel_info['discount'] / 100);
                } else {
                    $this->error('优惠码已过期！');
                }
            } else {
                $this->error('优惠码不正确！');
            }
        }  
        $fav = new FavoriteService();
        $is_fav = $fav->getFavorite(session('userId'), $goods_id);
		if(I('gc_id')){
		  $this->assign('gc_id', I('gc_id',0,'intval'));
		}
		
		
		
		
		
        //查询产品
/*		$url="http://api.map.baidu.com/geodata/v3/poi/list";
		$params=array();
		$params['geotable_id']='120330';
		$params['ak']="cVYACkMpnKdlnR0IG6g7SN3X";
		$params['goods_id']=$goods['goods_id'].",".$goods['goods_id'];
		$f=curl_http($url, $params, $method = 'GET');
		$d=json_decode($f,true);
		$c=$d['pois'];
		//修改
		if($c[0]){
		  $url="http://api.map.baidu.com/geodata/v3/poi/update";
		  $params=array();
		  $params['geotable_id']='120330';
		  $params['ak']="cVYACkMpnKdlnR0IG6g7SN3X";
		  $params['id']=$c[0][id]; 
		    $params['title']=$goods['goods_name'];
			$params['address']=$store['address'];
			$params['coord_type']=3;
			$params['longitude']=$store['longitude'];
			$params['latitude']=$store['latitude'];
			$params['store_id']=$goods['store_id'];
			$params['shop_id']=$goods['shop_id'];
			$params['goods_common_id']=$goods['goods_commonid'];
			$params['price']=$goods['goods_price'];
			$params['goods_id']=$goods['goods_id'];
			$params['evaluation_good_star']=$goods['evaluation_good_star'];
			$params['evaluation_count']=$goods['evaluation_count'];
		  $f=curl_http($url, $params, $method = 'POST');
		}else{
			//添加产品
			$url="http://api.map.baidu.com/geodata/v3/poi/create";
			$params=array();
			$params['title']=$goods['goods_name'];
			$params['address']=$store['address'];
			$params['longitude']=$store['longitude'];
			$params['latitude']=$store['latitude'];
			$params['coord_type']=3;
			$params['geotable_id']='120330';
			$params['ak']="cVYACkMpnKdlnR0IG6g7SN3X";
			$params['store_id']=$goods['store_id'];
			$params['shop_id']=$goods['shop_id']; 
			$params['goods_common_id']=$goods['goods_commonid'];
			$params['goods_name']=$goods['goods_name'];
			$params['price']=$goods['goods_price'];
			$params['goods_id']=$goods['goods_id'];
			$params['evaluation_good_star']=$goods['evaluation_good_star'];
			$params['evaluation_count']=$goods['evaluation_count'];
			$f=curl_http($url, $params, $method = 'POST');
	    }*/
		  
		//修改字段
		
		 /*$url="http://api.map.baidu.com/geodata/v3/column/update";
        $params=array();
		$params['id']="183049";
		$params['is_index_field']=1;
		$params['is_search_field']=1;
		$params['geotable_id']='120330';
		$params['ak']="cVYACkMpnKdlnR0IG6g7SN3X";
		$f=curl_http($url, $params, $method = 'POST');
		
	   
		$url="http://api.map.baidu.com/geodata/v3/column/update";
        $params=array();
		$params['id']="182447";
		$params['is_index_field']=1;
		$params['geotable_id']='120330';
		$params['ak']="cVYACkMpnKdlnR0IG6g7SN3X";
		$f=curl_http($url, $params, $method = 'POST');
		
		$params=array();
		$params['id']="182447";
		$params['is_index_field']=1;
		$params['geotable_id']='120330';
		$params['ak']="cVYACkMpnKdlnR0IG6g7SN3X";
		$f=curl_http($url, $params, $method = 'POST');
		$params=array();
		$params['id']="182446";
		$params['is_index_field']=1;
		$params['geotable_id']='120330';
		$params['ak']="cVYACkMpnKdlnR0IG6g7SN3X";
		$f=curl_http($url, $params, $method = 'POST');
		$params=array();
		$params['id']="182445";
		$params['is_index_field']=1;
		$params['geotable_id']='120330';
		$params['ak']="cVYACkMpnKdlnR0IG6g7SN3X";
		$f=curl_http($url, $params, $method = 'POST');
		$params=array();
		$params['id']="169799";
		$params['is_index_field']=1;
		$params['geotable_id']='120330';
		$params['ak']="cVYACkMpnKdlnR0IG6g7SN3X";
		$f=curl_http($url, $params, $method = 'POST');
		$params=array();
		$params['id']="169797";
		$params['is_index_field']=1;
		$params['geotable_id']='120330';
		$params['ak']="cVYACkMpnKdlnR0IG6g7SN3X";
		$f=curl_http($url, $params, $method = 'POST');
		$params=array();
		$params['id']="169795";
		$params['is_index_field']=1;
		$params['geotable_id']='120330';
		$params['ak']="cVYACkMpnKdlnR0IG6g7SN3X";
		$f=curl_http($url, $params, $method = 'POST');*/
          

	    

        $this->assign('is_fav', $is_fav);
        $this->assign('channel', $channel);
        $this->assign('goods', $goods);
		$this->assign('goods_id', $goods['goods_id']);
        $this->display('goods');
    }


    
	
	
	
	
	//产品详情页面
    public function setpostion(){
	  $lat=I("lat")?I("lat"):0;
	  $lng=I("lng")?I("lng"):0;
	  $map = new \BizService\MapService();
	  $f=$map->locationByGPS($lng, $lat);
	  if($lat){
	   session("lat",$f['lat']);
	  }
	  if($lng){
	   session("lng",$f['lng']);
	  }
	  echo session("lat");
	}
	
	//商家位置页面
	public function  storemap(){
	   //调取商家信息
	   $store_id=I('store_id');
	   $goods_id=I('goods_id');
	   $info=get_merchant_info($store_id);
	   $this->assign('info', $info);
	   $this->display('storemap');
	}
	
	public function ajax_browse(){
	  $goods_id=I('goods_id');
	  $goods_type=I('goods_type')?I('goods_type'):1;
	  $gc_id=I('gc_id')?I('gc_id'):0;
	  $username=session('userName');
	  $userid=D('users')->findUserIdByName($username);
	  $data=array();
	  $data['goods_id']=$goods_id;
	  $data['gc_id']=$gc_id;
	  $data['userid']=$userid;
	  $flag=D('goodsbrowse')->addBrowse($data);
	  echo "1".$flag;
	}
	
	//验证优惠信息
	public function ajax_check_channel_code(){
	    $goods_id=I('id')?I('id'):0;
		$goods_code=I('goods_code')?I('goods_code'):"";
		$goods_price=I('goods_price')?I('goods_price'):0;
		if($goods_code==""){
		  $arr=array();
		  $arr['status']=-4;
		  $arr['message']='请填写优惠码！';
		  echo json_encode($arr);
		  exit;  
		}
	    //检查此商品是否是特惠推广商品
        $ExtendService = new ExtendService();
        $channel = $ExtendService->checkExtendGoods($goods_id);
        if ($goods_code) {
            $channel_info = $ExtendService->getExtendGoods($goods_id, $goods_code);
            if ($channel_info) {
                if ($channel_info['end_time'] > time()) {
                    session('goods_code', $goods_code);
                    session('goods_id', $goods_id);
				    $arr=array();
					$arr['status']=1;
					$arr['goods_code']=$goods_code;
					$arr['price']= $goods_price * $channel_info['discount'] / 100;
					echo json_encode($arr);
                } else {
					$arr=array();
					$arr['status']=-1;
					$arr['message']='优惠码已过期！';
					echo json_encode($arr);
                }
            } else {
				    $arr=array();
					$arr['status']=-2;
					$arr['message']='优惠码不正确！';
					echo json_encode($arr);
            }
        }else{
		            $arr=array();
					$arr['status']=-3;
					$arr['message']='参数不对！';
					echo json_encode($arr);
		}
	}
	
	
	
	
	
   
}