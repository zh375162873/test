<?php
/**
现金商品信息模型
*/
namespace Admin\Model;
use Think\Model;
use BizService\Geohash;
use BizService\MapService;
class GoodsModel extends Model 
{ 
  protected $tableName = 'goods'; 
  protected $fields = array(
	  'goods_id', // 商品id
	  'goods_commonid', //商品公用id
	  'goods_name', //	varchar(50)	否		商品名称（+规格名称）
	  'goods_plun', //	varchar(50)	否		商品卖点，宣传语
	  'shop_id',//	int(10) 	否		商城id
	  'store_type',//  int(10)   供货商类型（1：代理下商家，2：渠道，3：合同）
	  'store_id',//  int(30)   供货商id(默认是代理下面的商家id，渠道id，或者合同id)
	  'store_name',//varchar(50)	否		店铺名称
	  'gc_id',//varchar(50)	否		主分类
	  'gc_id_1',//	int(10) 	否		一级分类id
	  'gc_id_2',//	int(10) 	否		二级分类id
	  'gc_id_3',// 	int(10) 	否		三级分类id
	  'brand_id',//	int(10) 	否		品牌id
	  'goods_price',// 	decimal(10,2)	否		商品价格
	  'goods_promotion_price',// 	decimal(10,2)	否		商品促销价格
	  'goods_promotion_type',// 	tinyint(3) 	否	0	促销类型 0无促销，1团购，2限时折扣
	  'goods_marketprice',// 	decimal(10,2)	否		市场价
	  'goods_storage_alarm',//	tinyint(3) 	否		库存报警值
	  'goods_click',//	int(10) 	否	0	商品点击数量
	  'goods_salenum',//tinyint(3) 	否		库存报警值
	  'goods_collect',//	int(10) 	否	0	收藏数量
	  'goods_storage',//int(10) 	否	0	商品库存，即上架的库存
	  'goods_image',//	varchar(100)	否		商品主图
	  'goods_state',//	tinyint(3) 	否		商品状态 0下架，1正常，10违规（禁售）
	  'goods_addtime',//int(10) 	否		商品添加时间
	  'goods_edittime',//	int(10) 	否		商品编辑时间
	  'areaid_1',//	int(10) 	否		一级地区id（省）
	  'areaid_2',// 	int(10) 	否		二级地区id（市）
	  'areaid_3',//	int(10) 	否		三级地区id（区）
	  'goods_commend',//	tinyint(3) 	否	0	商品推荐 1是，0否 默认0，如果大于0，则为排序
	  'evaluation_good_star',//	tinyint(3) 	否	5	好评星级
	  'evaluation_count',// 	int(10) 	否	0	评价数
	  'is_virtual',//	tinyint(3) 	否	0	是否为虚拟商品 1是，0否
	  'virtual_indate',//	int(10) 	否		虚拟商品有效期
	  'virtual_limit',// 	tinyint(3) 	否		虚拟商品购买上限
	  'virtual_invalid_refund',//	tinyint(3) 	否	1	是否允许过期退款， 1是，0否
	  'goods_body',//	text	否		商品内容（web端浏览，前期不需要，统一使用商品公用表说明，后期需要给各个渠道销售填写说明时使用）
	  'mobile_body',//text	否		手机端商品描述（前期不需要，统一使用商品公用表说明，后期需要给各个渠道销售填写说明时使用）
	  'geohash',//经纬度编码
	  'latitude',//纬度编码
	  'longitude',//经纬度编码
	  '_pk'=>'goods_id'//主键
  );
   
  //定义自动填充
 protected $_auto = array ( 
   array('goods_addtime','time',1,'function'),    
   array('goods_edittime','time',2,'function'), 
 );
 
 
/**
 * 获取商品详细信息
 * @param  milit   $id 分类ID或标识
 * @param  boolean $field 查询字段
 * @return array     产品信息
 * @author zhanghui
 */
 public function info($goods_commonid=0,$id=0,$field = true){
	/* 获取产品信息 */
	$map = array();
	if(is_numeric($goods_commonid)){ //通过ID查询
		$map['goods_commonid'] = $goods_commonid;
	} 
	if(is_numeric($id)&&$id>0){ //通过ID查询
		$map['goods_id'] = $id;
	} 
	return $this->field($field)->where($map)->find();
 }


/**
 * 获取商品详细信息
 * @param  milit   $id 分类ID或标识
 * @param  boolean $field 查询字段
 * @return array     产品信息
 * @author zhanghui
 */
 public function getinfobyid($id=0,$field = true){
	/* 获取产品信息 */
	$map = array();
	if(is_numeric($id)){ //通过ID查询
		$map['goods_id'] = $id;
	} 
	return $this->field($field)->where($map)->find();
 } 

 
/**
 * 获取商品详细信息
 * @param  milit   $id 分类ID或标识
 * @param  boolean $field 查询字段
 * @return array     产品信息
 * @author zhanghui
 */
 public function getinfobycommonid($goods_commonid=0,$field = true){
	/* 获取产品信息 */
	$map = array();
	if(is_numeric($goods_commonid)){ //通过ID查询
		$map['goods_commonid'] = $goods_commonid;
	} 
	return $this->field($field)->where($map)->find();
 } 
 
 
/**
 * 新增商品
 * @param  array   $data 商品信息数组
 * @return int     商品id
 * @author zhanghui
 */ 
  public function  addGoods($data){
        $data_goods=array();
		$data_goods['goods_commonid']=$data['goods_commonid'];
		$data_goods['goods_name']=$data['goods_name'];
		$data_goods['shop_id']=$data['shop_id'];
		$data_goods['store_type']=1;
		$data_goods['store_id']=$data['store_id'];
		$data_goods['store_name']=$data['store_name'];
		$data_goods['areaid_1']=$data['province'];
		$data_goods['areaid_2']=$data['city'];
		$data_goods['areaid_3']=$data['district'];
		$data_goods['goods_price']=$data['goods_price'];
		$data_goods['goods_marketprice']=$data['goods_marketprice'];
		$data_goods['goods_image']=$data['goods_image'];
		$data_goods['goods_state']=0;
		$data_goods['is_virtual']=1;
		$data_goods['virtual_indate']=strtotime($data['end_date']);
		$data_goods['virtual_limit']=$data['goods_limit'];
		$data_goods['goods_addtime']=time();
	    $data_goods['goods_edittime']=time();
		
		
		$goods_id=$this->add($data_goods);
		return  $goods_id;
  }
  
  /**
   *删除商品信息
   * @param  $id  商品公共id
   * @return  int   默认1
   * @author zhanghui
  */
  public function  delGoods($id){
         $data=array();
	     $data['goods_state']=-1;
	     $this->where('goods_commonid='.$id)->data($data)->save();
  }
  
  /**
   *更新现金产品信息
   * @param  $data  商品公共信息数组
   * @param  $id  商品公共id
   * @return  int   默认1
   * @author zhanghui  
  */
  public function  editGoods($data,$id){
        $data_goods=array();
		$data_goods['goods_serial']=$data['goods_serial'];
		$data_goods['goods_name']=$data['goods_name'];
		$data_goods['goods_plun']=$data['subtitle'];
		$data_goods['goods_price']=$data['goods_price'];
		$data_goods['goods_marketprice']=$data['goods_marketprice'];
		$data_goods['store_type']=1;
		$data_goods['store_id']=$data['store_id'];
		$data_goods['store_name']=$data['store_name'];
		$data_goods['mobile_body']=$data['mobile_body'];
		$data_goods['virtual_limit']=$data['goods_limit'];
		$data_goods['areaid_1']=$data['province'];
		$data_goods['areaid_2']=$data['city'];
		$data_goods['areaid_3']=$data['district'];
		$data_goods['goods_image']=$data['goods_image'];
		$data_goods['virtual_indate']=strtotime($data['end_date']); 
		$data_goods['goods_edittime']=time();
		//保存经纬度
		$merchant_info=get_merchant_info($data['store_id']);
		$n_latitude = $merchant_info['latitude'];
        $n_longitude = $merchant_info['longitude'];
		$geohash = new \BizService\GeohashService();
		$n_geohash = $geohash->encode($n_latitude, $n_longitude);  
		$data_goods['geohash']=$n_geohash;
		$data_goods['latitude']=$n_latitude;
		$data_goods['longitude']=$n_longitude;
	    $flag=$this->where("goods_commonid=".$id)->data($data_goods)->save();
		return  $flag;
  }
  

  
  
    //通过商品公用id更新产品信息
 public function   editGoodsbycommonid($goods_commonid,$data){
		 $flag=$this->where("goods_commonid=".$goods_commonid)->data($data)->save();
	     return $flag;
 }


/**
 *  卖货退货时修改总库存
 *  @param  $goods_commonid   商品公共id 
 *  @param  $num      数量  正数为销售  负数为退货
 *  @author  张辉
 */
 public function  changestorage($id,$num){
     $goods_commonid=$this->where('goods_id='.$id)->getField('goods_commonid');
     if($num>0){
	   //判断是否有此库存量的商品
	   $goods_storage=$this->where('goods_commonid='.$goods_commonid)->getField('goods_storage');
	   if($goods_storage>=$num){
	     $this->where("goods_commonid = $goods_commonid")->setDec('goods_storage',$num); // 减少库存数量
		 $this->where("goods_commonid = $goods_commonid")->setInc('goods_salenum',$num); // 增加销售数量
		 D('Admin/goodscommon')->changestorage($goods_commonid,$num); 
	   }else{
	    return -1;
	   }
	 }else{
	   $goods_salenum=$this->where('goods_commonid='.$goods_commonid)->getField('goods_salenum'); 
	   if($goods_salenum>=abs($num)){
	    $this->where("goods_commonid = $goods_commonid")->setDec('goods_salenum',abs($num)); // 减少销售数量
	    D('Admin/goodsstorehouse')->changestorage($goods_commonid,abs($num)); 
	    D('Admin/goodscommon')->changestorage($goods_commonid,$num); 
	   }else{
	    return -1;
	   } 
	 }
	 
	 return  1;
 } 
 
 
    //通过产品编号获取商品
	 /**
	 *  param  serial   商品编号
	 *  param  field  获取的字段
	 *  return  array  商品信息
	 */
	function getGoodsBySerial($serial,$field=true){ 
	    $goodscommon=D("goodscommon")->where("goods_serial = '$serial'")->find(); 
		$goods_commonid= $goodscommon['goods_commonid'];
		$goodsinfo=array();
		if($goodscommon){
		  $goodsinfo=D("goods")->where("goods_commonid = $goods_commonid")->field($field)->find();  
		}else{
		  return 0;
		}
		return  $goodsinfo;
	 }

 
 
 
   /**
   *获取首页现金产品信息第一页信息
   * @param  $data  搜索数组
   * @return  array   
   * @author zhanghui  
  */
   //模板七，产品内容生成
    public function getindexgoods($data)
    {
		$info=$data;
		//调取代理信息
        $shop_info = get_shop_proxy();
        $shop_id=$shop_info['shop_id']?$shop_info['shop_id']:1;
		$limit="";
		$gc_id=$info['info_data']['0']['gc_id']?$info['info_data']['0']['gc_id']:1;
		if($info['info_page']==1&&$info['info_num']>0){
			$num=$info['info_num'];
			$limit="  0,$num ";
		}
		if($info['info_num']>0){
			$num=$info['info_num'];
			$limit="  0,$num ";
		}
		if($gc_id > 1){
			$goodslist=   M()->query("select a.* from ddt_goods as a ,ddt_goods_class_relation as b where a.goods_commonid=b.goods_commonid   and a.shop_id= $shop_id  and a.goods_state>0   and b.class_id=".$gc_id." limit ".$limit);
		}else{
		  $goodslist=   M()->query("select * from ddt_goods where shop_id= $shop_id  and goods_state > 0  limit ".$limit);
		}
		foreach($goodslist as $key=>$val){
			$goodcommon_info=D('Admin/goodscommon')->where('goods_commonid='.$val['goods_commonid'])->find();
			$goodslist[$key]['position_tags']=$goodcommon_info['position_tags'];
			$goodslist[$key]['subtitle']=$goodcommon_info['subtitle'];
		}
		return $goodslist;
    }



}

?>