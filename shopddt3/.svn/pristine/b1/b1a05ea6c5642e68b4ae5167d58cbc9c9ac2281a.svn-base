<?php
namespace BizService;
use BizService\GoodsstoreService;
use BizService\GeohashService;
/**
 * 用于home模块前端 
 *
 * @author 张辉
 */  
class GoodshomeService extends BaseService { 
     //通过产品编号获取商品
	 /**
	 *  param  serial   商品编号
	 *  param  type  商品类型  1:现金商品  2：积分商品   3：抽奖商品
	 *  return  array  商品信息
	 */
	 function getGoodsBySerial($serial,$type=1){ 
	    $goodscommon=D("goodscommon")->where("goods_serial = '$serial'")->find(); 
		$goods_commonid= $goodscommon['goods_commonid'];
		$goodsinfo=array();
		if($goodscommon){
		  switch($type){
		    case 1:
			$goodsinfo=D("goods")->where("goods_commonid = $goods_commonid")->field('goods_id,goods_commonid,goods_name,shop_id,goods_price,goods_marketprice,goods_storage,goods_state')->find();  
			break;
			case 2:
			$goodsinfo=D("integralgoods")->where("goods_commonid = $goods_commonid")->field('goods_id,goods_commonid,goods_name,shop_id,goods_price,goods_marketprice,goods_storage,goods_state')->find();  
			break;
			case 3:
			$goodsinfo=D("prizegoods")->where("goods_commonid = $goods_commonid")->field('goods_id,goods_commonid,goods_name,shop_id,goods_price,goods_marketprice,goods_storage,goods_state')->find();  
			break;
		  }	
		}else{
		  return 0;
		}
		return  $goodsinfo;
	 }
	 
	 
	 //获取产品列表页面信息(产品列表页面使用)
	 function  getgooodlist($data,$type=1){
	    $info=$data;
		//调取代理信息
        $shop_info = get_shop_proxy();
        $shop_id=$shop_info['shop_id']?$shop_info['shop_id']:1;
		$gc_id=$data['gc_id'];

		if($gc_id > 1){
			$goodslist=   M()->query("select a.* from ddt_goods as a ,ddt_goods_class_relation as b where a.goods_commonid=b.goods_commonid   and a.shop_id= $shop_id  and a.goods_state>0   and b.class_id=".$gc_id);
		}else{
		  $goodslist=   M()->query("select * from ddt_goods where shop_id= $shop_id  and goods_state > 0 ");
		}
		foreach($goodslist as $key=>$val){
			$goodcommon_info=D('Admin/goodscommon')->where('goods_commonid='.$val['goods_commonid'])->find();
			$goodslist[$key]['position_tags']=$goodcommon_info['position_tags'];
			$goodslist[$key]['subtitle']=$goodcommon_info['subtitle'];
		}
		return $goodslist;
	 }
	 
	 
	 
	 /**
	 * 获取积分商品列表（前台）
	 * @todo 未进行条件查询
	 * @param array $param
	 * @param int $ispagenation
	 * @return array
	 */
	public function mgoods_list($param=array(),$ispagenation=true){
		$query = $this->getmgoodssql($param);
		$n_latitude = $param['lat'];
        $n_longitude = $param['lng'];
		if($ispagenation){
			
		}else{
		   if($param['order']==1){
		      $goodslist=$this->mgoods_list_bylbs($param);  
		   }else{
		      $goodslist=M()->query($query);
		   }	
			$n_latitude = $param['lat'];
            $n_longitude = $param['lng'];
			/*if($param['order']==1){
				foreach($goodslist as $row){
					$data[] = array(
						"latitude" => $row["latitude"],
						"longitude" => $row["longitude"],
						"goods_commonid" => $row["goods_commonid"],
						"goods_id" => $row["goods_id"],
					);
				}
				//算出实际距离
				foreach ($data as $key => $val) {
					$distance = getDistance($n_latitude, $n_longitude, $val['latitude'], $val['longitude']);
					$data[$key]['distance'] = $distance;
					//排序列
					$sortdistance[$key] = $distance;
				}
				//距离排序
				array_multisort($sortdistance, SORT_ASC, $data);
				$goodslist=$data;
			}*/
			foreach($goodslist as $key=>$val){
			
			$good_info=D('Admin/goods')->where('goods_commonid='.$val['goods_commonid'])->find();
			if($good_info){
		   
		   }else{
		     unset($goodslist[$key]);
		   }
			$goodslist[$key]=$good_info;
			$goodcommon_info=M('goods_common')->where('goods_commonid='.$val['goods_commonid'])->find();
			$goodslist[$key]['position_tags']=$goodcommon_info['position_tags'];
			$goodslist[$key]['subtitle']=$goodcommon_info['subtitle'];
			$goodslist[$key]['end_time']=$goodcommon_info['end_date'];
			$distance = getDistance($n_latitude, $n_longitude, $val['latitude'], $val['longitude']);
		    $goodslist[$key]['distance'] = number_format($distance/1000, 2, '.', '');
			//判断是否为虚假库存
			if($good_info['storage_type']){
			  //判断是否小于等于最小调拨值，如果小于就重新调配库存
			  if($good_info['storage_num']<=$good_info['storage_type_num']){
			    //调取现有的库存是否够最大库存的数量,就将显示的库存显示为最大库存值，如果不是，就显示现有库存
				if($good_info['goods_storage']>=$good_info['storage_type_max']){
			      $good_info['storage_num']=$good_info['storage_type_max'];
				}else{
				  $good_info['storage_num']=$good_info['goods_storage'];
				}
				M('goods')->where('goods_id='.$good_info['goods_id'])->data('storage_num='.$good_info['storage_num'])->save();
			  }
			  $goodslist[$key]['goods_storage']=$good_info['storage_num'];
			}
			
			
			
		}
			return $goodslist;
		}
	}
	
	

	/**
	 * 获取现金商品列表的sql语句（后台）
	 * @param array $data
	 * @return array
	 */
	public  function getmgoodssql($data){
        $shop_info=get_shop_proxy();
		$shop_id=$shop_info['shop_id']?$shop_info['shop_id']:0;
		//搜索字段
		$array=$data;
		//主表的搜索的字段
		$array_sou=$array['relation'];
		
		/** orfer
		*/
		$order =$data['order']; 
		//分页数据
		$limit =$data['limit'] == '' ? '' : ' LIMIT '.$data['limit'];
		//分组
        $group = " GROUP BY goods_commonid";
		$where="";
		//构造sql子查询语句
		$sql_select = "  a.goods_commonid,a.goods_id,a.latitude,a.longitude   ";
		$sql_table = " ddt_goods a  "; 
	    $sql_where = " a.goods_state=1  ";
		if($shop_id){
		  $sql_where.="and  a.shop_id  = $shop_id   "; 
		}
		$sql_group = "  a.goods_commonid   ";
		$sql_order = "  a.goods_commend desc,a.goods_commonid  desc ";  
		//排序  
		switch($order){
		  case 1:
		    //距离
			 $n_latitude = $data['lat'];
             $n_longitude = $data['lng'];
			 //如果gps为空，默认
			 if($n_latitude==""){
			   $n_latitude = "34.26567";
               $n_longitude = "108.953435";
			 }
			 if($n_latitude&&$n_longitude){
				  //经纬度转换
				  $geohash = new GeohashService();
				  $n_geohash = $geohash->encode($n_latitude, $n_longitude);
				  $n = 3;
                  $like_geohash = substr($n_geohash, 0, $n);
				  //数据库搜索
				  $sql_where.="and  a.geohash like '$like_geohash%'   "; 
			  }
			  $sql_order = " a.geohash desc,".$sql_order; 
			break;
		  case 2:
		    //评论
			$sql_order = " a.evaluation_good_star desc,".$sql_order; 
			break;
	      case 3:
		    //价格
			$sql_order = " a.goods_price asc,".$sql_order; 
			break;
		}
		
		$sql_table.= ", ddt_goods_common c  "; 
		$sql_where.=" and  c.goods_commonid=a.goods_commonid ";
		//关键词搜索
		$keyword=$data['keywords'];
		//如果传来keyword
		if($keyword){
		      
			 /* $sql_where.="  and ( a.goods_name like '%$keyword%'  or   LOCATE(a.goods_name,'$keyword')>0  or   c.position_tags like '%$keyword%'  or   LOCATE(c.position_tags,'$keyword')>0  or  c.store_name like '%$keyword%'  or   LOCATE(a.store_name,'$keyword')>0 or  c.subtitle like '%$keyword%'  or   LOCATE(c.subtitle,'$keyword')>0 )"; */
			$sql_where.="  and ( a.goods_name like '%$keyword%'    or   c.position_tags like '%$keyword%'  or    c.store_name like '%$keyword%'  or    c.subtitle like '%$keyword%'   )"; 
			 
			  
		}
		//分类搜索
		if($data['gc_id']){
	        $sql_table.= ", ddt_goods_class_relation b  "; 
			$sql_where.=" and  b.goods_commonid=a.goods_commonid and b.class_id=".$data['gc_id'];
		}
		//调取配置信息
		$setting=M('setting')->where('shop_id='.$shop_id)->select();
		foreach($setting as $val){
		  switch($val['code']){
		    case 'SHOW_EXPIRED':
			  if($val['value']==1){
			  
			  }else{  
			     $sql_where.=" and  c.end_date >  unix_timestamp(now())   "; 
			  }
			break;
			case 'SHOW_SOLD_OUT':
			  if($val['value']==1){
			  
			  }else{  
			     $sql_where.=" and  a.goods_storage > 0   "; 
			  }
			break;
			
		  }
		}
		
		
			
	   $sql=" SELECT ".$sql_select." FROM ".$sql_table." where ".$sql_where.$group." order by ".$sql_order.$limit; 
	   return $sql ; 
	}

	//修改评论分数和个数
	/**
	 * @param  int  $goods_id  产品id
	 * @param vrchar $good_star  评分
	 * @param int $count_num  评论个数
	 * @return 1
	 */
	public  function setevaluation($goods_id,$star_val,$count_num){
	   $goods = M("goods"); 
	   $data['evaluation_good_star'] = $star_val;
	   $data['evaluation_count'] = $count_num;
	   $goods->where("goods_id=$goods_id")->save($data); 
	   return 1;
	}
	
		 /**
	 * 获取积分商品列表（前台）通过lbs
	 * @todo 未进行条件查询
	 * @param array $param
	 * @param int $ispagenation
	 * @return array
	 */
	public function mgoods_list_bylbs($param=array(),$ispagenation=true){
	    $shop_info=get_shop_proxy();
		$shop_id=$shop_info['shop_id']?$shop_info['shop_id']:1;
	    //定义url
		$url="http://api.map.baidu.com/geosearch/v3/nearby";
		//定义参数数组
		$params=array();
		//设置分页
		   if($param['page']>0){
		    $params['page_size']=$param['size'];
			$params['page_index']=$param['page']-1;
			}
		//设置排序
		$params['sortby']="distance:1|price:1";
		//用户信息
		$params['geotable_id']=C('MAP_TABLEID');
	    $params['ak']=C('MAP_KEY');
		//位置信息
		$params['location']=$param['lng'].",".$param['lat'];
		//半径
		$params['radius']="5000000000";
		//筛选条件
		 //1、分类筛选
		$gc_id=$param['gc_id']?$param['gc_id']:1;
		if($gc_id > 1){
		    //获取分类名称
			$gc=M("goods_class")->where('gc_id='.$gc_id)->find();
		    $params['q']=$gc['gc_name'];
		} 
		 //2、商城筛选
		 $params['filter']="shop_id:".$shop_id;
		 $f=curl_http($url, $params, $method = 'GET');
		 $d=json_decode($f,true);
		 $goodslist=$d['contents'];
		 $count=$d['total'];
		 
		foreach($goodslist as $key=>$val){  
		   $goodslist[$key]['goods_commonid']=$val['goods_common_id'];
		   $goodslist[$key]['longitude']=$val['location'][0];
		   $goodslist[$key]['latitude']=$val['location'][1];
		}
		return $goodslist;
	}
	
	
	
	
}