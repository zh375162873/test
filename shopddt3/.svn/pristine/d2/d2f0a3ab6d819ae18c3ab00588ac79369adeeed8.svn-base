<?php
/*
 * 普通商品订单支付和管理模块
 */
namespace Home\Controller;
use BizService\OrderService;
use Think\Controller;

class PayReturnController extends Controller {
	public $orderdb,$price_orderdb,$orderservice;


	public function _initialize() {
		//初始化模型
		$this->orderdb=D("Orders");
		$this->price_orderdb=D("PriceOrders");
		$this->orderservice=new OrderService();
		vendor('Alipay.Corefunction');
        vendor('Alipay.Md5function');
        vendor('Alipay.Notify');
        vendor('Alipay.Submit');
        $log_name="./weixin/notify_url.log";//log文件路径
        $this->log_result($log_name,"支付宝异步，test0".json_encode($_REQUEST));
	}
	
    public function index(){
        echo "支付相应控制器";
    }
    
    
    /*
     * 支付宝处理
     */
    public function alipay_return_do(){
    	$log_name="./weixin/notify_url.log";//log文件路径
    	$this->log_result($log_name,"支付宝异步，test1");
        //头部的处理跟上面两个方法一样，这里不罗嗦了！
        $alipay_config=C('alipay_config');
        //$alipayNotify = new \AlipayNotify($alipay_config);//计算得出通知验证结果
        //$verify_result = $alipayNotify->verifyReturn();
        $verify_result = true;
        if($verify_result) {
            //验证成功
            //获取支付宝的通知返回参数，可参考技术文档中页面跳转同步通知参数列表
            $out_trade_no   = $_GET['out_trade_no'];      //商户订单号
            $trade_no       = $_GET['trade_no'];          //支付宝交易号
            $trade_status   = $_GET['trade_status'];      //交易状态
            $total_fee      = $_GET['total_fee'];         //交易金额
            $notify_id      = $_GET['notify_id'];         //通知校验ID。
            $notify_time    = $_GET['notify_time'];       //通知的发送时间。
            $buyer_email    = $_GET['buyer_email'];       //买家支付宝帐号；
    
            $parameter = array(
                "out_trade_no"     => $out_trade_no,      //商户订单编号；
                "trade_no"     => $trade_no,          //支付宝交易号；
                "total_fee"      => $total_fee,         //交易金额；
                "trade_status"     => $trade_status,      //交易状态
                "notify_id"      => $notify_id,         //通知校验ID。
                "notify_time"    => $notify_time,       //通知的发送时间。
                "buyer_email"    => $buyer_email,       //买家支付宝帐号
            );
            
             
            if($_GET['trade_status'] == 'TRADE_FINISHED' || $_GET['trade_status'] == 'TRADE_SUCCESS') {

                    if(!$this->orderdb->checkorderstatus($out_trade_no)){
                       
                        if($this->orderdb->notiy_order($parameter,$type=1)){
                            
                            $this->redirect("Order/orderlist","",1,"订单支付成功！");
                        }else{
                            
                             $this->error("订单支付失败");
                        }
                    }else{
                       // $this->error("该订单已经失效");
						$this->redirect("Order/orderlist","",1,"订单支付成功！");
						exit;
                    }
               
                /* if(!checkorderstatus($out_trade_no)){
                   // orderhandle($parameter);  //进行订单处理，并传送从支付宝返回的参数；
                    $this->orderdb->notiy_order($parameter);
                } */
                $this->redirect("Home/PayReturn/success");//跳转到配置项中配置的支付成功页面；
            }else {
                echo "trade_status=".$_GET['trade_status'];
                $this->redirect("Home/PayReturn/success");//跳转到配置项中配置的支付失败页面；
            }
        }else{
            //验证失败
            //如要调试，请看alipay_notify.php页面的verifyReturn函数
           $this->error("支付失效");
        }
    }
    
    
    function  log_result($file,$word)
    {
    	$fp = fopen($file,"a") ;
    	flock($fp, LOCK_EX) ;
    	fwrite($fp,"执行日期：".strftime("%Y-%m-%d-%H：%M：%S",time())."\n".$word."\n\n");
    	flock($fp, LOCK_UN);
    	fclose($fp);
    }
    
    
    public function alipay_notiy_do(){
    	$log_name="./weixin/notify_url.log";//log文件路径
    	$this->log_result($log_name,"支付宝异步，test2");
    	//M("orders")->where("order_sn='".$_POST['out_trade_no']."'")->save(array('address'=>"test2"));
        //这里还是通过C函数来读取配置项，赋值给$alipay_config
        $alipay_config=C('alipay_config');
        //计算得出通知验证结果
        //$alipayNotify = new \AlipayNotify($alipay_config);
       // $verify_result = $alipayNotify->verifyNotify();
		$verify_result = true;
        if($verify_result) {
            //验证成功
            //获取支付宝的通知返回参数，可参考技术文档中服务器异步通知参数列表
            $out_trade_no   = $_POST['out_trade_no'];      //商户订单号
            $trade_no       = $_POST['trade_no'];          //支付宝交易号
            $trade_status   = $_POST['trade_status'];      //交易状态
            $total_fee      = $_POST['total_fee'];         //交易金额
            $notify_id      = $_POST['notify_id'];         //通知校验ID。
            $notify_time    = $_POST['notify_time'];       //通知的发送时间。格式为yyyy-MM-dd HH:mm:ss。
            $buyer_email    = $_POST['buyer_email'];       //买家支付宝帐号；
            $parameter = array(
                "out_trade_no"     => $out_trade_no, //商户订单编号；
                "trade_no"     => $trade_no,     //支付宝交易号；
                "total_fee"     => $total_fee,    //交易金额；
                "trade_status"     => $trade_status, //交易状态
                "notify_id"     => $notify_id,    //通知校验ID。
                "notify_time"   => $notify_time,  //通知的发送时间。
                "buyer_email"   => $buyer_email,  //买家支付宝帐号；
            );
            
            
            
            if($_POST['trade_status'] == 'TRADE_FINISHED') {
                //
				if(!$this->orderdb->checkorderstatus($out_trade_no)){
                            if(!$this->orderdb->notiy_order($parameter,$type=1)){
                                echo "fail";
                            }else{
							    echo "success"; 
							}
                }else{
						   echo "success"; 
				}		
            }else if ($_POST['trade_status'] == 'TRADE_SUCCESS') {                           
             
                    //orderhandle($parameter);
                        if(!$this->orderdb->checkorderstatus($out_trade_no)){
                            if(!$this->orderdb->notiy_order($parameter,$type=1)){
                                echo "fail";
                            }else{
							    echo "success"; 
							}
                        }else{
						   echo "success"; 
						}		
            }else{
            	echo "fail";
            }
           //echo "success";        //请不要修改或删除
        }else {
            //验证失败
            echo "fail";
        }
    }
	
	
	
	
	
	
	
//    /*
//     * 微信支付相应
//     */
//    public function wx_notiy_do(){
//        //处理相关订单数据
//        Vendor("WxPayPubHelper.WxPayPubHelper");
//
//        //使用通用通知接口
//        $notify = new \Notify_pub();
//
//        //存储微信的回调
//        $xml = $GLOBALS['HTTP_RAW_POST_DATA'];
//        $notify->saveData($xml);
//
//        //验证签名，并回应微信。
//        //对后台通知交互时，如果微信收到商户的应答不是成功或超时，微信认为通知失败，
//        //微信会通过一定的策略（如30分钟共8次）定期重新发起通知，
//        //尽可能提高通知的成功率，但微信不保证通知最终能成功。
//        // $this->log_result("【checkSign】:\n".$notify->checkSign()."\n");
//         if($notify->checkSign() == FALSE){
//            $notify->setReturnParameter("return_code","FAIL");//返回状态码
//            $notify->setReturnParameter("return_msg","签名失败");//返回信息
//        }else{
//            $notify->setReturnParameter("return_code","SUCCESS");//设置返回码
//        }
//        $returnXml = $notify->returnXml();
//        // echo $returnXml;
//        // $this->log_result("【返回回调信息】:\n".$returnXml."\n");
//        //==商户根据实际情况设置相应的处理流程，此处仅作举例=======
//
//        //以log文件形式记录回调信息
//        $this->log_result("【接收到的notify通知】:\n".$xml."\n");
//
//        if($notify->checkSign() == TRUE)
//        {
//            if ($notify->data["return_code"] == "FAIL") {
//                //此处应该更新一下订单状态，商户自行增删操作
//                //$this->log_result("【通信出错】:\n".$xml."\n");
//                echo "error";
//            }
//            elseif($notify->data["result_code"] == "FAIL"){
//                //此处应该更新一下订单状态，商户自行增删操作
//                //$this->log_result("【业务出错】:\n".$xml."\n");
//                echo "error";
//            }
//            else{
//                //此处应该更新一下订单状态，商户自行增删操作
//                //$this->log_result("【支付成功】:\n".$xml."\n");
//                $order_sn=I("get.order_sn");
//                $type = I("get.type");
//                if($type==1){
//                    if($this->orderdb->notiy_order($order_sn,$type=2)){
//                        echo "success";
//                    }else{
//                        echo "error";
//                    }
//                }
//                elseif ($type==2){
//                    if($this->price_orderdb->notiy_order($order_sn,$type=2)){
//                        echo "success";
//                    }else{
//                        echo "error";
//                    }
//                }else{
//                    echo "error";
//                }
//            }
//        }
//    }
    
}

