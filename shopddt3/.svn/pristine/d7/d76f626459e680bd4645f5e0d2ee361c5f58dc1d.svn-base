<?php
/*
 * 核销码管理模型
 * 对核销码的管理核销操作
 */
namespace Home\model;
use Think\Model;
use BizService\OrderService;
use BizService\GoodsstoreService;

class DhmManageModel extends Model {
    public $orderservice,$order,$inte_order,$price_order,$GoodsstoreService;
    public function __construct(){
        parent::__construct();
        $this->orderservice=new OrderService();
        $this->GoodsstoreService=new GoodsstoreService();
    }
	protected $auto=array(
		array("add_time","time",1,"function"),
		array("dh_time","time",1,"function"),
	);
	
	
	//生成核销码
	public function create_dhm($orderinfo,$type){
		//初始化数据
		$num=$orderinfo['goods_num'];
		$info=array(
		    "goods_id"=>$orderinfo['goods']['goods_id'],
		    "order_id"=>$orderinfo['order_id'],
		    "shop_id"=>$orderinfo['shop_id'],
		    "store_id"=>$orderinfo['store_id'],
		    "buyer_id"=>$orderinfo['buyer_id'],
		    "status"=>0,
		    "type"=>$type,
		);
		
	    for($i=0;$i<$num;$i++){
	       $dhm_code=$this->recreatedhm();
	       $info['dhm_code']=$dhm_code;
	       $info['add_time']=time();
	       $this->data($info)->add();
	    }
         return true;		
	}
	
	//验证核销码
	/*
	 * $type 1:普通商品兑换码；2：积分商城兑换码；3：兑奖活动商品兑换码
	 * return data['error']=1(数据为空)，2(操作失败)，3(核销码不能使用了)，0(核销成功)
	 */
	public function yanzheng_dhm($dhm_code,$store_id,$shop_id){
	    //验证验证码
	    $dhm_code=trim($dhm_code);
	    $arr=$this->where(array("dhm_code"=>$dhm_code,"store_id"=>$store_id,"shop_id"=>$shop_id))->find();
	    $data = array();  
	    if($arr){
	        $goods = D("OrdersGoods")->where(array("order_id"=>$arr['order_id'],"goods_id"=>$arr['goods_id']))->field("goods_name,goods_image")->find();
	        $arr['goods_name']=$goods['goods_name'];
	        //判断核销码状态
	        if($arr['status']==1){
	            $data['error']=3;
	            $data['msg']="核销码已经核销";
	        }
	        elseif ($arr['refund_status']>0){
	            $data['error']=4;
	            $data['msg']="该核销码存在退款";
	        }else{
    	        if($this->where(array("dhm_code"=>$dhm_code,"store_id"=>$store_id,"shop_id"=>$shop_id))->data(array("status"=>1,"dh_time"=>time()))->save()){
    	           //判断相关订单的核销码还有吗(当订单中的核销码存在退款中也算是订单未完成)
    	            if($this->where(array("order_id"=>$arr['order_id'],"type"=>$arr['type'],"status"=>0,"refund_status"=>array("neq",2)))->find()){
    	                 
    	            }else{
    	                 if($arr['type']==1){
    	                     D("Home/Orders")->where(array("order_id"=>$arr['order_id']))->data(array("order_status"=>2))->save();
    	                     $map = array(
    	                          "user_status" => 1,
    	                          "qd_status" => 1,
    	                          "qd_calc_time1" => time(),
    	                          "user_calc_time1" => time(),
    	                     );
    	                     D("Home/CommissionOrder")->where(array("order_id" =>$arr['order_id']))->data($map)->save();
    	                 }elseif ($arr['type']==2){
    	                     D("Home/IntegralOrders")->where(array("order_id"=>$arr['order_id']))->data(array("order_status"=>2))->save();
    	                 }elseif ($arr['type']==3){
    	                     D("Home/PriceOrders")->where(array("order_id"=>$arr['order_id']))->data(array("order_status"=>2))->save();
    	                 }
    	            }
    	            $data['error'] = 0;
    	            $data['msg'] ="核销成功";
    	        }else{
    	            $data['error'] = 2; //操作失败
    	            $data['msg'] ="核销操作失败";
    	        }
	        }
	        $data['data']=$arr;
	    }else{
	        $data['error'] = 1;//数据为空
	        $data['msg'] ="数据为空";
	    }
	    return $data;
	}
	
	//核销码列表(外测调用)
	public function list_dhm($store_id,$shop_id,$status){
		$map = array();
		if($store_id){
		$map['store_id']=$store_id;
		}
		if($shop_id){
		$map['shop_id']=$shop_id;
		}
        if($status!==''){ 
        $map['status'] = $status;
        }
	    
       $infolist = $this->where($map)->field("id,goods_id,order_id,buyer_id,dhm_code,add_time,dh_time,status,refund_status,type")->select();
       for($i=0;$i<count($infolist);$i++){
          $arr = D("OrdersGoods")->where(array("order_id"=>$infolist[$i]['order_id'],"goods_id"=>$infolist[$i]['goods_id']))->field("goods_name,goods_price")->find();
          $infolist[$i]['goods_name']=$arr['goods_name'];
          $infolist[$i]['goods_price']=$arr['goods_price'];
       }
       return $infolist;
	}
	
	//核销码商城列表(内用)
	public function list_shop_dhm($shop_id,$store_id,$status){
	    $map = array();
	    if($store_id){
	        $map['store_id']=$store_id;
	    }
	    if($shop_id){
	        $map['shop_id']=$shop_id;
	    }
	    if($status!==''){
	        $map['status'] = $status;
	    }
	     
	    $infolist = $this->where($map)->field("id,goods_id,order_id,store_id,buyer_id,dhm_code,add_time,dh_time,status,refund_status,type")->select();
	    for($i=0;$i<count($infolist);$i++){
	        $arr = D("OrdersGoods")->where(array("order_id"=>$infolist[$i]['order_id'],"goods_id"=>$infolist[$i]['goods_id']))->field("goods_name,goods_price")->find();
	        $infolist[$i]['goods_name']=$arr['goods_name'];
	        $infolist[$i]['goods_price']=$arr['goods_price'];
	        $order = D("Orders")->where(array("order_id"=>$infolist[$i]['order_id']))->field("order_sn")->find();
	        $infolist[$i]['order_sn']=$order['order_sn'];
	        $goods_serial = $this->GoodsstoreService->getinfo($infolist[$i]['goods_id'],array("goods_serial"),4);
	        $infolist[$i]['goods_serial']=$goods_serial['goods_serial'];
	    } 
	    return $infolist;
	}
	
	//判断生成码是否重复
	public function recreatedhm(){
	    $dhm_code=$this->orderservice->CreateExchangeCode();
	    $arr=$this->where(array("dhm_code"=>$dhm_code))->find();
	    if(!$arr){
	        return $dhm_code;
	    }else{
	        $this->recreatedhm();
	    }
	}
	
	
	
}