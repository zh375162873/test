<?php

namespace BizService;

/**
 * 定时开枪
 *
 * @author 张辉
 */
class PeriodService extends BaseService {



/* 获得定时段抢购的商品是否开放
*  @return $period_info array 
*  ['shut'] 0,开放购买;1,未开始;2,已结束;  ['begin'] 距开始时间  ['end'] 距结束时间
*/
public function get_period_sales($goods_id){
    //限时抢购，在活动时间之内,限时有效,活动时间之外不影响购买
    $goods_period1 = M('goods_period_sale')->where(" type=1 and on_using=1 and goods_id = '$goods_id' ")->find(); 
	
	if($goods_period1){
	    $period_info=array();
		$t=time();
		$start_time=$goods_period1['begin_date']+$goods_period1['begin_seconds'];
		$end_time=$goods_period1['end_date']+$goods_period1['end_seconds'];
	    if($t<$start_time){
			//$period_info['start_time'] = $start_time;
			//$period_info['end_time'] = $end_time;
			$period_info['shut'] = 1;
			//$period_info['goods_id'] = $value['goods_id'];
			$period_info['begin'] = $start_time-$t;
		}elseif($t>$start_time&&$t<$end_time){
		  //  $period_info['start_time'] = $start_time;
			//$period_info['end_time'] = $end_time;
			$period_info['shut'] = 0;
			//$period_info['goods_id'] = $value['goods_id'];
			$period_info['end'] =$end_time-$t;
		}elseif($t>$end_time){
		  //  $period_info['start_time'] = $start_time;
			//$period_info['end_time'] = $end_time;
			$period_info['shut'] = 2;
			//$period_info['goods_id'] = $value['goods_id'];
		}
		return $period_info;exit();  
	}else{
		//分时段抢购在活动时间之内,限时有效,活动时间之外不影响购买
		$goods_period = M('goods_period_sale')->where("  type=2 and on_using=1  and goods_id = '$goods_id' and begin_date < ".time()." and end_date >".time())->select();
		print_r($goods_period);
		//如果该商品存在定时段销售活动
		if($goods_period){
			$period_info = array();//数组记录定时段的信息
			$now_seconds = time()-strtotime(date('Y-m-d',strtotime('+0 day')))+8*3600;
			foreach ($goods_period as $key => $value) {
				//当前时间在设定购买时间内，开放购买,直接返回状态shut=0和最大剩余时间end_seconds
				if($now_seconds>=$value['begin_seconds']&&$now_seconds<=$value['end_seconds']){
					$period_info['shut'] = 0;
					//设置剩余时间
					$period_info['end'] = 0;
					//得到最大剩余时间
					if($period_info['end']<$value['end_seconds']-$now_seconds){
						$period_info['start_time'] = strtotime(date('Y-m-d',strtotime('+0 day')))+$value['begin_seconds']-8*3600;
						$period_info['end_time'] = strtotime(date('Y-m-d',strtotime('+0 day')))+$value['end_seconds']-8*3600;
						$period_info['id'] = $value['id'];
						$period_info['goods_id'] = $value['goods_id'];
						$period_info['end'] = $value['end_seconds']-$now_seconds;
					}
				}
			}
			if($period_info['end']){
				return $period_info;exit();
			}
			foreach ($goods_period as $key => $value) {
				//当前时间小于开始时间，抢购之前，封闭购买,直接返回状态shut=1和最小开始时间begin_seconds
				if($now_seconds<$value['begin_seconds']){
					$period_info['shut'] = 1;
					//得到最小开始时间
					//初始化还有一天时间
					$period_info['begin'] = 86400;
					if($period_info['begin']>$value['begin_seconds']-$now_seconds){
						$period_info['start_time'] = strtotime(date('Y-m-d',strtotime('+0 day')))+$value['begin_seconds']-8*3600;
						$period_info['end_time'] = strtotime(date('Y-m-d',strtotime('+0 day')))+$value['end_seconds']-8*3600;
						$period_info['id'] = $value['id'];
						$period_info['goods_id'] = $value['goods_id'];
						$period_info['begin'] = $value['begin_seconds']-$now_seconds;
					}
				}
			}
			if($period_info['begin']){
				return $period_info;exit();
			}
			foreach ($goods_period as $key => $value) {
				//当前时间小于开始时间或者大于结束时间，抢购之后，封闭购买,直接返回状态shut=2和最小开始时间end_seconds
				if($now_seconds>$value['end_seconds']){
					$period_info['start_time'] = strtotime(date('Y-m-d',strtotime('+0 day')))+$value['begin_seconds']-8*3600;
					$period_info['end_time'] = strtotime(date('Y-m-d',strtotime('+0 day')))+$value['end_seconds']-8*3600;
					$period_info['shut'] = 2;
						$period_info['goods_id'] = $value['goods_id'];
					return $period_info;exit();
				}
			}
		}
	 }
} 


	
}